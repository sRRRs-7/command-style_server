name: CI test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 5

  steps:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      # Label used to access the service container
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: command_style
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      # Label used to access the service container
      redis:
        image: redis:7.0-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      api:
        image: server-api
        options: >-
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8080:8080

    # workflow steps
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.3
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v3

      - name: Install sql-migrate
        run: go install github.com/rubenv/sql-migrate/...@latest

      - name: Run migrations
        run: sql-migrate up -config=sql_migrate.yml

      - name: Go api server start
        run: go run main.go

      - name: Test
        run: go test -v -cover ./...
